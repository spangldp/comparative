package interpreter;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
	
	private static Map<String, Object> vars = new HashMap<String, Object>();
	private static int lineNum = 0;

	public static void main(String[] args) throws FileNotFoundException {
		File inFile = new File(args[0]);
		@SuppressWarnings("resource")
		Scanner scanner = new Scanner(inFile);

		while(scanner.hasNext()){
			lineNum++;
			String line = scanner.nextLine();
			
			//tokenize
			String[] lineSplit = line.split(" ");			
			if(lineSplit[0].equals("PRINT"))
				System.out.println(vars.get(lineSplit[1]));
			
			//initializing variables
			if(line.contains("=") && !line.contains("FOR ") && !line.contains(" ENDFOR")){
				String varName = lineSplit[0];
				String operand = lineSplit[1];
				String stringValue = lineSplit[2];
				
				performOperation(varName, operand, stringValue);
			}
			else if(line.contains("=") && line.contains("FOR ") && line.contains(" ENDFOR")){
				int iterations = Integer.parseInt(lineSplit[1]);
				String trimmedLine = line.substring((line.indexOf("FOR")+6), line.indexOf("ENDFOR"));
				String[] operations = trimmedLine.split(" ; ");
				for(int i = 0; i < iterations; i++){
					for(String operation : operations){
						String[] opSplit = operation.split(" ");
						if(opSplit[0].equals("PRINT")){
							System.out.println(vars.get(opSplit[1]));
						}
						else{
							String varName = opSplit[0];
							String operand = opSplit[1];
							String stringValue = opSplit[2];
							performOperation(varName, operand, stringValue);
						}
					}
				}
			}
		}

	}

	private static void performOperation(String varName, String operand, String stringValue) {
		if(operand.equals("=")){
			if(isNumber(stringValue)){
				vars.put(varName, Integer.parseInt(stringValue));	
			}
			else if(!isNumber(stringValue) && stringValue.charAt(0)==('\"') && stringValue.charAt(stringValue.length()-1)==('\"')){
				vars.put(varName, stringValue.substring(1,stringValue.length()-1));
			}
			else if(!isNumber(stringValue) && !(stringValue.charAt(0)==('\"')) && !(stringValue.charAt(stringValue.length()-1)==('\"'))){
				if(vars.containsKey(stringValue)){
					vars.put(varName, vars.get(stringValue));
				}
				else{
					runtimeError();
				}
			}
			else{
				runtimeError();
			}
		}
		else if(operand.equals("+=")){
			if(vars.get(varName) instanceof Integer && isNumber(stringValue)){
				vars.put(varName, Integer.parseInt(vars.get(varName).toString()) + Integer.parseInt(stringValue));	
			}
			else if(!(vars.get(varName) instanceof Integer) && !isNumber(stringValue) && stringValue.charAt(0)==('\"') && stringValue.charAt(stringValue.length()-1)==('\"')){
				vars.put(varName, vars.get(varName).toString()+stringValue.substring(1,stringValue.length()-1));
			}
			else if((!isNumber(stringValue) && !(stringValue.charAt(0)==('\"')) && !(stringValue.charAt(stringValue.length()-1)==('\"')))){
				if(vars.get(varName) instanceof Integer && vars.get(stringValue) instanceof Integer)
					vars.put(varName, Integer.parseInt(vars.get(varName).toString()) + Integer.parseInt(vars.get(stringValue).toString()));
				else if(vars.get(varName) instanceof String && vars.get(stringValue) instanceof String)
					vars.put(varName, (String) vars.get(varName) + (String) vars.get(stringValue));
				else
					runtimeError();
			}
			else{
				runtimeError();
			}
		}
		else if(operand.equals("-=")){
			if(vars.get(varName) instanceof Integer && isNumber(stringValue)){
				vars.put(varName, Integer.parseInt(vars.get(varName).toString()) - Integer.parseInt(stringValue));
			}
			else if(vars.get(varName) instanceof Integer && vars.get(stringValue) instanceof Integer){
				vars.put(varName, Integer.parseInt(vars.get(varName).toString()) - Integer.parseInt(vars.get(stringValue).toString()));
			}
			else{
				runtimeError();
			}
		}
		else if(operand.equals("*=")){
			if(vars.get(varName) instanceof Integer && isNumber(stringValue)){
				vars.put(varName, Integer.parseInt(vars.get(varName).toString()) * Integer.parseInt(stringValue));
			}
			else if(vars.get(varName) instanceof Integer && vars.get(stringValue) instanceof Integer){
				vars.put(varName, Integer.parseInt(vars.get(varName).toString()) * Integer.parseInt(vars.get(stringValue).toString()));
			}
			else{
				runtimeError();
			}
		}
		else{
			runtimeError();
		}
	}
	
	private static void runtimeError(){
		System.out.println("RUNTIME ERROR: line " + lineNum);
		System.exit(0);
	}
	
	private static boolean isNumber(String string) {
	    try {
	        Integer.parseInt(string);
	    } catch (Exception e) {
	        return false;
	    }
	    return true;
	}

}
